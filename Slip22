Write a Menu Driven program in Java for the following: Assume Employee table with

attributes (ENo, EName, Salary) is already created. 1. Insert 2. Update 3. Display 4. Exit.

import java.util.ArrayList;

import java.util.Scanner;

class Employee {

private int ENo;

private String EName;

private double Salary;

public Employee(int ENo, String EName, double Salary) {

this.ENo = ENo;

this.EName = EName;

this.Salary = Salary;

}

public int getENo() {

return ENo;

}

public String getEName() {

return EName;

}

public double getSalary() {

return Salary;

}

public void setSalary(double newSalary) {

this.Salary = newSalary;

}

@Override

public String toString() {

return "ENo: " + ENo + ", EName: " + EName + ", Salary: " + Salary;

}

}

public class EmployeeManagementSystem {

private static ArrayList<Employee> employeeList = new ArrayList<>();

private static Scanner scanner = new Scanner(System.in);

public static void main(String[] args) {

int choice;

do {

System.out.println("Menu:");

System.out.println("1. Insert");

System.out.println("2. Update");

System.out.println("3. Display");

System.out.println("4. Exit");

System.out.print("Enter your choice: ");

choice = scanner.nextInt();

switch (choice) {

case 1:

insertEmployee();

break;
case 2:

updateEmployee();

break;

case 3:

displayEmployees();

break;

case 4:

System.out.println("Exiting the program. Goodbye!");

break;

default:

System.out.println("Invalid choice. Please enter a valid option.");

}

} while (choice != 4);

scanner.close();

}

private static void insertEmployee() {

System.out.print("Enter Employee Number (ENo): ");

int ENo = scanner.nextInt();

System.out.print("Enter Employee Name (EName): ");

String EName = scanner.next();

System.out.print("Enter Employee Salary: ");

double Salary = scanner.nextDouble();

Employee newEmployee = new Employee(ENo, EName, Salary);

employeeList.add(newEmployee);

System.out.println("Employee added successfully!");

}

private static void updateEmployee() {

System.out.print("Enter Employee Number (ENo) to update salary: ");

int ENo = scanner.nextInt();

boolean found = false;

for (Employee employee : employeeList) {

if (employee.getENo() == ENo) {

System.out.print("Enter new salary for Employee " + ENo + ": ");

double newSalary = scanner.nextDouble();

employee.setSalary(newSalary);

System.out.println("Salary updated successfully!");
found = true;

break;

}

}

if (!found) {

System.out.println("Employee with Employee Number " + ENo + " not found.");

}

}

private static void displayEmployees() {

if (employeeList.isEmpty()) {

System.out.println("No employees to display.");

} else {

System.out.println("Employee List:");

for (Employee employee : employeeList) {

System.out.println(employee);

}

}

}

}

2. Write a JSP program which accepts UserName in a TextBox and greets the user according to

the time on server machine.

<%@ page import="java.util.Calendar" %>

<%@ page import="java.text.SimpleDateFormat" %>

<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<html>

<head>

<title>Greeting Page</title>

</head>

<body>

<form action="" method="post">

Enter your name: <input type="text" name="username" required>

<input type="submit" value="Submit">

</form>

<%

String username = request.getParameter("username");

Calendar calendar = Calendar.getInstance();

int hourOfDay = calendar.get(Calendar.HOUR_OF_DAY);

// Determine the appropriate greeting based on the time

String greeting;

if (hourOfDay >= 0 && hourOfDay < 12) {

greeting = "Good morning";

} else if (hourOfDay >= 12 && hourOfDay < 18) {

greeting = "Good afternoon";

} else {

greeting = "Good evening";

}

%>

<%-- Display the greeting message --%>

<h2><%= greeting %>, <%= username %>!</h2>

</body>

</html>
